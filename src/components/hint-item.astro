---
import { translations } from "../constants/translations";
import type { LocalizedHint } from "../models/hint";
import { getLocale } from "../utils/locale";

interface Props {
  hint: LocalizedHint;
  index: number;
}

const { hint, index } = Astro.props;
const locale = getLocale(Astro);
const id = `hint-${index}`;
---

<div id={id} class="hint container">
  <h3 class="title">{hint[locale].title}</h3>
  <p class="content">{translations[locale].hidden}</p>
</div>

<style>
  .content {
    filter: blur(6px);
  }

  .container.opened > .content {
    filter: none;
  }
</style>

<script define:vars={{ id, content: hint[locale].content }}>
  const init = () => {
    const container = document.getElementById(id);
    if (!container) return;

    container.addEventListener("click", () => {
      const { classList, children } = container;
      const contentElement = children.length > 0 && children[1];
      if (!contentElement) return;
      if (classList.contains("opened")) {
        contentElement.textContent = "Hidden";
        classList.remove("opened");
      } else {
        contentElement.textContent = content;
        classList.add("opened");
      }
    });
  };

  init();
</script>
